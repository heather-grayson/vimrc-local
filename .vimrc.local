" kill utf-8 bytemarks
set nobomb
setglobal nobomb
au BufReadPost setlocal nobomb

" Set colorscheme
color twilight

" No spaces. Use tabs
set noexpandtab

" No spell checking by default 
set nospell

if has("gui_running")
  if has("gui_gtk2")
    set guifont=Inconsolata\ 10
  elseif has("gui_win32")
    set guifont=Dina:h8:cANSI
  endif
endif

" figure out how to hide NERDTree by default
let NERDTreeKeepTreeInNewTab=0

" StripTrailingWhitespace function
function! <SID>StripTrailingWhitespaces()
    " Preparation: save last search, and cursor position.
    let _s=@/
    let l = line(".")
    let c = col(".")
    " Do the business:
    %s/\s\+$//e
    " Clean up: restore previous search history, and cursor position
    let @/=_s
    call cursor(l, c)
endfunction

au BufWritePre *.py,*.js,*.as :call <SID>StripTrailingWhitespaces()


" Automatically tabularize equals signs
inoremap <silent> = =<Esc>:call <SID>ealign()<CR>a
function! s:ealign()
  let p = '^.*=[^>]*$'
  if exists(':Tabularize') && getline('.') =~# '^.*=' && (getline(line('.')-1) =~# p || getline(line('.')+1) =~# p)
    let column = strlen(substitute(getline('.')[0:col('.')],'[^=]','','g'))
    let position = strlen(matchstr(getline('.')[0:col('.')],'.*=\s*\zs.*'))
    Tabularize/=/l1
    normal! 0
    call search(repeat('[^=]*=',column).'\s\{-\}'.repeat('.',position),'ce',line('.'))
  endif
endfunction


let g:snips_author = 'James Tomasino <james@tomasino.org>'