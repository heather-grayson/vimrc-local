" disable bufexplorer until the weird buffer bugs are fixed
let g:bufexplorer_version = 'disabled'

" disable neocomplcache
let g:neocomplcache_disable_auto_complete = 1
inoremap <expr><TAB> pumvisible() ? "\<C-n>" : <SID>check_back_space() ? "\<TAB>" : "\<C-x>\<C-u>"
function! s:check_back_space()"{{{
let col = col('.') - 1
return !col || getline('.')[col - 1] =~ '\s'
endfunction"}}
let g:neocomplcache_enable_auto_select = 1
inoremap <expr><C-l> neocomplcache#complete_common_string()
inoremap <expr><C-h> neocomplcache#smart_close_popup().“\<C-h>”
inoremap <expr><BS> neocomplcache#smart_close_popup().“\<C-h>”

" disable numbers.vim
let g:numbers = 'disabled'

" kill utf-8 bytemarks
set nobomb
setglobal nobomb
au BufReadPost setlocal nobomb

" No spaces. Use tabs
set noexpandtab

" Colorscheme
if has('gui_running')
	color twilight
	if has('gui_macvim')
		set transparency=0
	endif
endif

" No error bells
set noerrorbells

" No spell checking by default 
set nospell

" Visual text bubbling remap from vim-unimpared
" Bubble single lines
nmap <C-Up> ddkP
nmap <C-Down> ddp
" Bubble multiple lines
vmap <C-Up> xkP`[V`]
vmap <C-Down> xp`[V`]

" Visually select last edited/pasted text
nmap gV `[v`]

" StripTrailingWhitespace function
function! <SID>StripTrailingWhitespaces()
    " Preparation: save last search, and cursor position.
    let _s=@/
    let l = line(".")
    let c = col(".")
    " Do the business:
    %s/\s\+$//e
    " Clean up: restore previous search history, and cursor position
    let @/=_s
    call cursor(l, c)
endfunction

au BufWritePre *.py,*.js,*.scss,*.as :call <SID>StripTrailingWhitespaces()

let g:snips_author = 'James Tomasino <james@tomasino.org>'

" Position gitcommits at top line no matter what
autocmd FileType gitcommit call setpos('.', [0, 1, 1, 0])

" Highlight past 80 columns and keep it dark grey
set colorcolumn=80
autocmd ColorScheme * highlight ColorColumn guibg=grey15
highlight ColorColumn guibg=grey15

" Source the vimrc file after saving .vimrc.local
autocmd bufwritepost .vimrc.local source $MYVIMRC
