n  y<C-G>      *@:call setreg(v:register, <SNR>52_recall())<CR>
nox<C-E>         :NERDTreeToggle<CR>:NERDTreeMirror<CR>
s  <C-H>       * a<BS>
nox<C-H>         <C-W>h<C-W>_
s  <Tab>         <Right><Plug>(neosnippet_jump_or_expand)
nox<NL>          <C-W>j<C-W>_
s  <C-K>         <Plug>(neosnippet_expand_or_jump)
nox<C-K>         <C-W>k<C-W>_
nox<C-L>         <C-W>l<C-W>_
s  <CR>        * a<BS>
n  <C-P>       * :<C-U>CtrlP<CR>
nox<Esc>[H       g0
nox<Esc>[F       $
o  %           * v:<C-U>call <SNR>42_Match_wrapper('',1,'o') <CR>
x  %           * :<C-U>call <SNR>42_Match_wrapper('',1,'v') <CR>m'gv``
n  %           * :<C-U>call <SNR>42_Match_wrapper('',1,'n') <CR>
n  ,P            :Preview<CR>
n  ,ca           <Plug>NERDCommenterAltDelims
x  ,cu           <Plug>NERDCommenterUncomment
n  ,cu           <Plug>NERDCommenterUncomment
x  ,cb           <Plug>NERDCommenterAlignBoth
n  ,cb           <Plug>NERDCommenterAlignBoth
x  ,cl           <Plug>NERDCommenterAlignLeft
n  ,cl           <Plug>NERDCommenterAlignLeft
n  ,cA           <Plug>NERDCommenterAppend
x  ,cy           <Plug>NERDCommenterYank
n  ,cy           <Plug>NERDCommenterYank
x  ,cs           <Plug>NERDCommenterSexy
n  ,cs           <Plug>NERDCommenterSexy
x  ,ci           <Plug>NERDCommenterInvert
n  ,ci           <Plug>NERDCommenterInvert
n  ,c$           <Plug>NERDCommenterToEOL
x  ,cn           <Plug>NERDCommenterNested
n  ,cn           <Plug>NERDCommenterNested
x  ,cm           <Plug>NERDCommenterMinimal
n  ,cm           <Plug>NERDCommenterMinimal
x  ,c<Space>     <Plug>NERDCommenterToggle
n  ,c<Space>     <Plug>NERDCommenterToggle
x  ,cc           <Plug>NERDCommenterComment
n  ,cc           <Plug>NERDCommenterComment
n  ,ig           <Plug>IndentGuidesToggle
x  ,,w         * :<C-U>call EasyMotion#WB(1, 0)<CR>
o  ,,w         * :call EasyMotion#WB(0, 0)<CR>
n  ,,w         * :call EasyMotion#WB(0, 0)<CR>
x  ,,t         * :<C-U>call EasyMotion#T(1, 0)<CR>
o  ,,t         * :call EasyMotion#T(0, 0)<CR>
n  ,,t         * :call EasyMotion#T(0, 0)<CR>
x  ,,n         * :<C-U>call EasyMotion#Search(1, 0)<CR>
o  ,,n         * :call EasyMotion#Search(0, 0)<CR>
n  ,,n         * :call EasyMotion#Search(0, 0)<CR>
x  ,,k         * :<C-U>call EasyMotion#JK(1, 1)<CR>
o  ,,k         * :call EasyMotion#JK(0, 1)<CR>
n  ,,k         * :call EasyMotion#JK(0, 1)<CR>
x  ,,j         * :<C-U>call EasyMotion#JK(1, 0)<CR>
o  ,,j         * :call EasyMotion#JK(0, 0)<CR>
n  ,,j         * :call EasyMotion#JK(0, 0)<CR>
x  ,,gE        * :<C-U>call EasyMotion#EW(1, 1)<CR>
o  ,,gE        * :call EasyMotion#EW(0, 1)<CR>
n  ,,gE        * :call EasyMotion#EW(0, 1)<CR>
x  ,,f         * :<C-U>call EasyMotion#F(1, 0)<CR>
o  ,,f         * :call EasyMotion#F(0, 0)<CR>
n  ,,f         * :call EasyMotion#F(0, 0)<CR>
x  ,,e         * :<C-U>call EasyMotion#E(1, 0)<CR>
o  ,,e         * :call EasyMotion#E(0, 0)<CR>
n  ,,e         * :call EasyMotion#E(0, 0)<CR>
x  ,,b         * :<C-U>call EasyMotion#WB(1, 1)<CR>
o  ,,b         * :call EasyMotion#WB(0, 1)<CR>
n  ,,b         * :call EasyMotion#WB(0, 1)<CR>
x  ,,W         * :<C-U>call EasyMotion#WBW(1, 0)<CR>
o  ,,W         * :call EasyMotion#WBW(0, 0)<CR>
n  ,,W         * :call EasyMotion#WBW(0, 0)<CR>
x  ,,T         * :<C-U>call EasyMotion#T(1, 1)<CR>
o  ,,T         * :call EasyMotion#T(0, 1)<CR>
n  ,,T         * :call EasyMotion#T(0, 1)<CR>
x  ,,N         * :<C-U>call EasyMotion#Search(1, 1)<CR>
o  ,,N         * :call EasyMotion#Search(0, 1)<CR>
n  ,,N         * :call EasyMotion#Search(0, 1)<CR>
x  ,,ge        * :<C-U>call EasyMotion#E(1, 1)<CR>
o  ,,ge        * :call EasyMotion#E(0, 1)<CR>
n  ,,ge        * :call EasyMotion#E(0, 1)<CR>
x  ,,F         * :<C-U>call EasyMotion#F(1, 1)<CR>
o  ,,F         * :call EasyMotion#F(0, 1)<CR>
n  ,,F         * :call EasyMotion#F(0, 1)<CR>
x  ,,E         * :<C-U>call EasyMotion#EW(1, 0)<CR>
o  ,,E         * :call EasyMotion#EW(0, 0)<CR>
n  ,,E         * :call EasyMotion#EW(0, 0)<CR>
x  ,,B         * :<C-U>call EasyMotion#WBW(1, 1)<CR>
o  ,,B         * :call EasyMotion#WBW(0, 1)<CR>
n  ,,B         * :call EasyMotion#WBW(0, 1)<CR>
n  ,u          * :UndotreeToggle<CR>
n  ,gp         * :Git push<CR>
n  ,gl         * :Glog<CR>
n  ,gb         * :Gblame<CR>
n  ,gc         * :Gcommit<CR>
n  ,gd         * :Gdiff<CR>
n  ,gs         * :Gstatus<CR>
n  ,tt         * :TagbarToggle<CR>
n  ,jt           <Esc>:%!python -m json.tool<CR><Esc>:set filetype=json<CR>
n  ,b            :BufExplorer<CR>
n  ,ss           :SessionSave<CR>
n  ,sl           :SessionList<CR>
v  ,a|           :Tabularize /|<CR>
n  ,a|           :Tabularize /|<CR>
x  ,a,           :Tabularize /,<CR>
n  ,a,           :Tabularize /,<CR>
x  ,a::          :Tabularize /:\zs<CR>
n  ,a::          :Tabularize /:\zs<CR>
x  ,a:           :Tabularize /:<CR>
n  ,a:           :Tabularize /:<CR>
x  ,a=           :Tabularize /=<CR>
n  ,a=           :Tabularize /=<CR>
n  ,nt           :NERDTreeFind<CR>
nox,e            :NERDTreeFind<CR>
n  ,ac           <Plug>ToggleAutoCloseMappings
n  ,ff           [I:let nr = input("Which one: ")|exe "normal " . nr ."[\t"<CR>
nox,=            <C-W>=
nox,et           :tabe %%
nox,ev           :vsp %%
nox,es           :sp %%
nox,ew           :e %%
n  ,/            :nohlsearch<CR>
n  ,f9           :set foldlevel=9<CR>
n  ,f8           :set foldlevel=8<CR>
n  ,f7           :set foldlevel=7<CR>
n  ,f6           :set foldlevel=6<CR>
n  ,f5           :set foldlevel=5<CR>
n  ,f4           :set foldlevel=4<CR>
n  ,f3           :set foldlevel=3<CR>
n  ,f2           :set foldlevel=2<CR>
n  ,f1           :set foldlevel=1<CR>
n  ,f0           :set foldlevel=0<CR>
n  <D-r>       * :CtrlPMRU<CR>
n  <D-t>       * :CtrlP<CR>
x  <           * <gv
x  >           * >gv
noxH             gT
noxL             gt
x  S             <Plug>VSurround
n  Y           * y$
o  [%          * v:<C-U>call <SNR>42_MultiMatch("bW", "o") <CR>
x  [%            <Esc>[%m'gv``
n  [%          * :<C-U>call <SNR>42_MultiMatch("bW", "n") <CR>
nox\c            :echo g:colors_name<CR>
nox\p            :CP<CR>
nox\n            :CN<CR>
x  ]f            :call PythonDec("function", 1)<CR>
no ]f            :call PythonDec("function", 1)<CR>
x  ]F            :call PythonDec("function", -1)<CR>
no ]F            :call PythonDec("function", -1)<CR>
x  ]j            :call PythonDec("class", 1)<CR>
no ]j            :call PythonDec("class", 1)<CR>
x  ]J            :call PythonDec("class", -1)<CR>
no ]J            :call PythonDec("class", -1)<CR>
nox]<Down>       :call PythonNextLine(1)<CR>
nox]<Up>         :call PythonNextLine(-1)<CR>
nox]d            :call PythonSelectObject("function")<CR>
nox]c            :call PythonSelectObject("class")<CR>
x  ]u            :call PythonUncommentSelection()<CR>
no ]u            :call PythonUncommentSelection()<CR>
x  ]#            :call PythonCommentSelection()<CR>
no ]#            :call PythonCommentSelection()<CR>
x  ]>            >
no ]>            ]tV]e>
x  ]<            <
no ]<            ]tV]e<
nox]v            ]tV]e
x  ]e            :<C-U>PEoB<CR>m'gv``
no ]e            :PEoB<CR>
x  ]t            :<C-U>PBOB<CR>m'gv``
no ]t            :PBoB<CR>
o  ]%          * v:<C-U>call <SNR>42_MultiMatch("W",  "o") <CR>
x  ]%            <Esc>]%m'gv``
n  ]%          * :<C-U>call <SNR>42_MultiMatch("W",  "n") <CR>
x  a%            <Esc>[%v]%
n  cr            <Plug>Coerce
n  cs            <Plug>Csurround
n  ds            <Plug>Dsurround
n  gx            <Plug>NetrwBrowseX
o  g%          * v:<C-U>call <SNR>42_Match_wrapper('',0,'o') <CR>
x  g%          * :<C-U>call <SNR>42_Match_wrapper('',0,'v') <CR>m'gv``
n  g%          * :<C-U>call <SNR>42_Match_wrapper('',0,'n') <CR>
x  gS            <Plug>VgSurround
n  gV            `[v`]
n  j           * gj
n  k           * gk
n  ySS           <Plug>YSsurround
n  ySs           <Plug>YSsurround
n  yss           <Plug>Yssurround
n  yS            <Plug>YSurround
n  ys            <Plug>Ysurround
noxzh            zH
noxzl            zL
s  <Left>      * <Esc>bi
s  <Right>     * <Esc>a
s  <Del>       * a<BS>
s  <BS>        * a<BS>
n  <Plug>NetrwBrowseX * :call netrw#NetrwBrowseX(expand("<cWORD>"),0)<CR>
x  <Plug>(neosnippet_register_oneshot_snippet) * :<C-U>call neosnippet#register_oneshot_snippet()<CR>
x  <Plug>(neosnippet_start_unite_snippet_target) * unite#sources#snippet_target#start()
x  <Plug>(neosnippet_expand_target) * :<C-U>call neosnippet#expand_target()<CR>
x  <Plug>(neosnippet_get_selected_text) * :call neosnippet#get_selected_text(visualmode(), 1)<CR>
s  <Plug>(neosnippet_jump) * neosnippet#jump_impl()
s  <Plug>(neosnippet_expand) * neosnippet#expand_impl()
s  <Plug>(neosnippet_jump_or_expand) * neosnippet#jump_or_expand_impl()
s  <Plug>(neosnippet_expand_or_jump) * neosnippet#expand_or_jump_impl()
s  <Plug>(neocomplcache_snippets_force_jump)   <Plug>(neosnippet_jump)
s  <Plug>(neocomplcache_snippets_force_expand)   <Plug>(neosnippet_expand)
s  <Plug>(neocomplcache_snippets_jump)   <Plug>(neosnippet_expand_or_jump)
s  <Plug>(neocomplcache_snippets_expand)   <Plug>(neosnippet_expand_or_jump)
n  <Plug>NERDCommenterAltDelims * :call <SNR>54_SwitchToAlternativeDelimiters(1)<CR>
x  <Plug>NERDCommenterUncomment * :call NERDComment("x", "Uncomment")<CR>
n  <Plug>NERDCommenterUncomment * :call NERDComment("n", "Uncomment")<CR>
x  <Plug>NERDCommenterAlignBoth * :call NERDComment("x", "AlignBoth")<CR>
n  <Plug>NERDCommenterAlignBoth * :call NERDComment("n", "AlignBoth")<CR>
x  <Plug>NERDCommenterAlignLeft * :call NERDComment("x", "AlignLeft")<CR>
n  <Plug>NERDCommenterAlignLeft * :call NERDComment("n", "AlignLeft")<CR>
n  <Plug>NERDCommenterAppend * :call NERDComment("n", "Append")<CR>
x  <Plug>NERDCommenterYank * :call NERDComment("x", "Yank")<CR>
n  <Plug>NERDCommenterYank * :call NERDComment("n", "Yank")<CR>
x  <Plug>NERDCommenterSexy * :call NERDComment("x", "Sexy")<CR>
n  <Plug>NERDCommenterSexy * :call NERDComment("n", "Sexy")<CR>
x  <Plug>NERDCommenterInvert * :call NERDComment("x", "Invert")<CR>
n  <Plug>NERDCommenterInvert * :call NERDComment("n", "Invert")<CR>
n  <Plug>NERDCommenterToEOL * :call NERDComment("n", "ToEOL")<CR>
x  <Plug>NERDCommenterNested * :call NERDComment("x", "Nested")<CR>
n  <Plug>NERDCommenterNested * :call NERDComment("n", "Nested")<CR>
x  <Plug>NERDCommenterMinimal * :call NERDComment("x", "Minimal")<CR>
n  <Plug>NERDCommenterMinimal * :call NERDComment("n", "Minimal")<CR>
x  <Plug>NERDCommenterToggle * :call NERDComment("x", "Toggle")<CR>
n  <Plug>NERDCommenterToggle * :call NERDComment("n", "Toggle")<CR>
x  <Plug>NERDCommenterComment * :call NERDComment("x", "Comment")<CR>
n  <Plug>NERDCommenterComment * :call NERDComment("n", "Comment")<CR>
n  <Plug>Coerce * :<C-U>call <SNR>50_coerce(nr2char(getchar()))<CR>
n  <Plug>IndentGuidesDisable & :IndentGuidesDisable<CR>
n  <Plug>IndentGuidesEnable & :IndentGuidesEnable<CR>
n  <Plug>IndentGuidesToggle & :IndentGuidesToggle<CR>
n  <Plug>ToggleAutoCloseMappings   :call <SNR>38_ToggleAutoCloseMappings()<CR>
x  <Plug>VgSurround * :<C-U>call <SNR>37_opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>
x  <Plug>VSurround * :<C-U>call <SNR>37_opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>
n  <Plug>YSurround * :<C-U>set opfunc=<SNR>37_opfunc2<CR>g@
n  <Plug>Ysurround * :<C-U>set opfunc=<SNR>37_opfunc<CR>g@
n  <Plug>YSsurround * :<C-U>call <SNR>37_opfunc2(v:count1)<CR>
n  <Plug>Yssurround * :<C-U>call <SNR>37_opfunc(v:count1)<CR>
n  <Plug>Csurround * :<C-U>call <SNR>37_changesurround()<CR>
n  <Plug>Dsurround * :<C-U>call <SNR>37_dosurround(<SNR>37_inputtarget())<CR>
n  <Plug>SurroundRepeat * .
nox<Plug>NERDTreeSteppedClose & :call <SNR>36_NERDTreeSteppedClose()
nox<Plug>NERDTreeSteppedOpen & :call <SNR>36_NERDTreeSteppedOpen()
nox<Plug>NERDTreeMirrorToggle & :call <SNR>36_NERDTreeMirrorToggle()
nox<Plug>NERDTreeMirrorOpen & :call <SNR>36_NERDTreeMirrorOrCreate()
nox<Plug>NERDTreeTabsToggle & :call <SNR>36_NERDTreeToggleAllTabs()
nox<Plug>NERDTreeTabsClose & :call <SNR>36_NERDTreeCloseAllTabs()
nox<Plug>NERDTreeTabsOpen & :call <SNR>36_NERDTreeOpenAllTabs()
x  <C-Down>      xp`[V`]
x  <C-Up>        xkP`[V`]
n  <C-Down>      ddp
n  <C-Up>        ddkP-- INSERT --
0

